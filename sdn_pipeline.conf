input {
  file {
    path => "/tmp/snort/log/alert.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "snort_alert"
  }
  file {
    path => "/tmp/snort/log/blocked_ips.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "blocked_ips"
  }
  file {
    path => "/var/log/pox/pox.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "pox_log"
  }
}

filter {
  if [type] == "snort_alert" {
    grok {
      match => {
        "message" => "\[\*\*\] \[%{DATA:sid_rev}\] %{GREEDYDATA:event_type} \[\*\*\] \{%{WORD:proto}\} %{IP:src_ip}:%{INT:src_port} -> %{IP:dst_ip}:%{INT:dst_port}"
      }
    }
    mutate {
      split => ["sid_rev", ":"]
      add_field => {
        "sid" => "%{[sid_rev][0]}"
        "rev" => "%{[sid_rev][1]}"
      }
      remove_field => ["sid_rev"]
    }
  }

  if [type] == "blocked_ips" {
    grok {
      match => {
        "message" => "%{TIMESTAMP_ISO8601:timestamp} - BLOCKED IP: %{IP:src_ip}"
      }
    }
    mutate {
      add_field => {
        "event_type" => "Blocked IP"
        "proto" => "N/A"
      }
    }
    date {
      match => ["timestamp", "ISO8601"]
      target => "@timestamp"
      remove_field => ["timestamp"]
    }
  }

  mutate {
    add_field => { "log_type" => "%{type}" }
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "sdn-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}
